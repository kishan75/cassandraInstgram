CREATE TABLE instagramdemo.user (
    userid timeuuid PRIMARY KEY,
    atdeleted timestamp,
    dob date,
    email text,
    firstname text,
    lastname text,
    phone text,
    time timestamp,
    username text
);

CREATE TABLE post_count (
  userid timeuuid PRIMARY KEY,
  post_count counter
);

CREATE TABLE reply_count (
  commentid timeuuid PRIMARY KEY,
  reply_count counter
);


CREATE TABLE comment(
commentid timeuuid,	
postid timeuuid,
userid timeuuid,
time timestamp,
comment text,
PRIMARY KEY (postid,time)
)WITH CLUSTERING ORDER BY (time ASC);

CREATE TABLE reply(
replyid timeuuid,	
commentid timeuuid,
userid timeuuid,
time timestamp,
reply text,
PRIMARY KEY (commentid,time)
)WITH CLUSTERING ORDER BY (time ASC);


CREATE TABLE instagramdemo.post (
    postid timeuuid ,
    userid timeuuid,
    caption text,
    imagepath text,
    time timestamp,
PRIMARY KEY (userid,time)
) WITH CLUSTERING ORDER BY (time ASC);

CREATE TABLE instagramdemo.following (
    userid timeuuid,
    followingid timeuuid,
    time timestamp,
PRIMARY KEY (userid,time)
) WITH CLUSTERING ORDER BY (time ASC);

CREATE TABLE IF NOT EXISTS myactivity(
activityid timeuuid,
byuser timeuuid,
ofuser timeuuid,
activitytype int,
activityobjectid timeuuid,
time timestamp,
PRIMARY KEY (byuser,time)
)WITH CLUSTERING ORDER BY (time ASC);

CREATE TABLE IF NOT EXISTS notification(
notificationid timeuuid,
byuser timeuuid,
ofuser timeuuid,
type int,
notificationobjectid timeuuid,
time timestamp,
PRIMARY KEY (ofuser,time)
)WITH CLUSTERING ORDER BY (time ASC);

CREATE TABLE instagramdemo.comment_count (
    postid timeuuid PRIMARY KEY,
    comment_count counter
);

CREATE TABLE IF NOT EXISTS message(
messageid timeuuid,
byuser timeuuid,
touser timeuuid,
type text,   // reply or
body text,
time timestamp,
PRIMARY KEY ((byuser,touser),time)
) WITH CLUSTERING ORDER BY (time ASC);



CREATE TABLE IF NOT EXISTS notificationtype(
message text PRIMARY KEY,
id int
);

